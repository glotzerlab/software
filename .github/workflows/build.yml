name: Build

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  # Trigger on pull requests.
  pull_request:

  # Trigger on pushes to the mainline branches. These triggers push the built images to Docker Hub.
  push:
    branches:
      - "trunk"

  # Trigger on request.
  workflow_dispatch:

jobs:
  Build:
    name: Build ${{ matrix.configuration }}
    runs-on: [self-hosted,jetstream2,CPU]
    strategy:
      fail-fast: false
      matrix:
        configuration: [nompi, greatlakes, bridges2, expanse, expanse-gpu]
    steps:
      - uses: actions/checkout@v3.0.0
      - name: Login to DockerHub
        if: ${{ github.event_name != 'pull_request' || (github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]') }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build image
        run: ./build.sh -r glotzerlab ${{ matrix.configuration }}
      - name: Push image
        run: docker push -a glotzerlab/software
        if: github.ref == 'refs/heads/trunk'
      - name: Slack notification
        if: ${{ (github.ref == 'refs/heads/trunk') && (failure() || cancelled()) }}
        uses: 8398a7/action-slack@v3.13.0
        with:
          status: ${{ job.status }}
          fields: workflow,ref,message,commit
          mention: channel
          if_mention: failure,cancelled
          channel: '#dev-glotzerlab-software'
          username: Github Action
          author_name: Build ${{ matrix.configuration }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }}

  start_action_runners:
    name: Start action runners
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.4.0
        with:
          path: code
      - uses: actions/cache@v3.0.1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-openstacksdk==0.61.0
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install openstack
        run: python3 -m pip install openstacksdk==0.61.0
      - name: Start action runners
        run: python3 code/.github/workflows/start-action-runners.py
        env:
          OS_APPLICATION_CREDENTIAL_ID: ${{ secrets.OS_APPLICATION_CREDENTIAL_ID }}
          OS_APPLICATION_CREDENTIAL_SECRET: ${{ secrets.OS_APPLICATION_CREDENTIAL_SECRET }}
          OS_AUTH_TYPE: v3applicationcredential
          OS_AUTH_URL: https://js2.jetstream-cloud.org:5000/v3/
          OS_IDENTITY_API_VERSION: 3
          OS_REGION_NAME: "IU"
          OS_INTERFACE: public
