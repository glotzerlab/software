

{% if system == 'greatlakes' %}

RUN curl -sSLO https://www.open-mpi.org/software/ompi/v{{ OPENMPI_VERSION }}/downloads/openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }}.tar.bz2 \
   && tar -xjf openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }}.tar.bz2 -C /root \
   && cd /root/openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }} \
   && ./configure --prefix=/usr --with-pmix=/usr --with-libevent=external --with-hwloc=/usr --without-verbs --enable-shared --with-ucx\
   && make all install \
   && rm -rf /root/openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }} \
   && rm /openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }}.tar.bz2

{% elif system == 'delta' %}

RUN curl -sSLO https://github.com/ofiwg/libfabric/releases/download/v{{LIBFABRIC_VERSION}}/libfabric-{{LIBFABRIC_VERSION}}.tar.bz2 \
   && tar -xjf libfabric-{{LIBFABRIC_VERSION}}.tar.bz2 -C /root \
   && cd /root/libfabric-{{LIBFABRIC_VERSION}} \
   && mkdir build && cd build \
   && ../configure --prefix=/usr  \
   && make install \
   && rm -rf /root/libfabric-{{LIBFABRIC_VERSION}} \
   && rm /libfabric-{{LIBFABRIC_VERSION}}.tar.bz2

RUN curl -sSLO https://www.open-mpi.org/software/ompi/v{{ OPENMPI_VERSION }}/downloads/openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }}.tar.bz2 \
   && tar -xjf openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }}.tar.bz2 -C /root \
   && cd /root/openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }} \
   && ./configure --prefix=/usr \
                  --enable-shared \
                  --disable-silent-rules \
                  --disable-builtin-atomics \
                  --with-pmix=/usr \
                  --enable-mpi1-compatibility \
                  --without-verbs \
                  --with-ucx \
                  --with-ofi \
                  --without-cma \
                  --without-mxm \
                  --without-xpmem \
                  --without-psm2 \
                  --without-hcoll \
                  --without-fca \
                  --without-psm \
                  --without-cray-xpmem \
                  --without-alps \
                  --disable-memchecker \
                  --with-libevent=external \
                  --with-hwloc=/usr \
                  --disable-java \
                  --disable-mpi-java \
                  --with-gpfs=no \
                  --enable-dlopen \
   && make all install \
   && rm -rf /root/openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }} \
   && rm /openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }}.tar.bz2

{% elif system == 'bridges2' %}

# bridges2 needs UCX

RUN curl -sSLO https://www.open-mpi.org/software/ompi/v{{ OPENMPI_VERSION }}/downloads/openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }}.tar.bz2 \
   && tar -xjf openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }}.tar.bz2 -C /root \
   && cd /root/openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }} \
   && ./configure --prefix=/usr \
                  --enable-shared \
                  --disable-silent-rules \
                  --disable-builtin-atomics \
                  --enable-static \
                  --without-pmi \
                  --enable-mpi1-compatibility \
                  --without-verbs \
                  --without-xpmem \
                  --without-ofi \
                  --without-mxm \
                  --without-cma \
                  --with-ucx \
                  --without-psm \
                  --without-knem \
                  --without-psm2 \
                  --without-hcoll \
                  --without-fca \
                  --disable-java \
                  --disable-mpi-java \
                  --without-cuda  \
   && make all install \
   && rm -rf /root/openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }} \
   && rm /openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }}.tar.bz2

{% elif system == 'expanse' %}

RUN curl -sSLO https://www.open-mpi.org/software/ompi/v{{ OPENMPI_VERSION }}/downloads/openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }}.tar.bz2 \
   && tar -xjf openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }}.tar.bz2 -C /root \
   && cd /root/openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }} \
   && ./configure --prefix=/usr \
                  --enable-shared \
                  --disable-silent-rules \
                  --disable-builtin-atomics \
                  --enable-static \
                  --with-pmix=/usr \
                  --enable-mpi1-compatibility \
                  --without-fca \
                  --without-ofi \
                  --without-verbs \
                  --without-cuda  \
                  --without-mxm \
                  --without-psm \
                  --without-knem \
                  --without-hcoll \
                  --without-cma \
                  --without-xpmem \
                  --without-psm2 \
                  --without-loadleveler \
                  --without-lsf \
                  --without-alps \
                  --without-tm \
                  --without-sge \
                  --disable-memchecker \
                  --disable-java \
                  --disable-mpi-java \
                  --with-ucx \
   && make all install \
   && rm -rf /root/openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }} \
   && rm /openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }}.tar.bz2

{% elif system == 'expanse-gpu' %}

RUN curl -sSLO https://www.open-mpi.org/software/ompi/v{{ OPENMPI_VERSION }}/downloads/openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }}.tar.bz2 \
   && tar -xjf openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }}.tar.bz2 -C /root \
   && cd /root/openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }} \
   && ./configure --prefix=/usr \
                  --enable-shared \
                  --disable-silent-rules \
                  --disable-builtin-atomics \
                  --enable-static \
                  --enable-mpi1-compatibility \
                  --without-fca \
                  --without-ofi \
                  --without-verbs \
                  --without-cuda  \
                  --without-mxm \
                  --without-psm \
                  --without-knem \
                  --without-hcoll \
                  --without-cma \
                  --without-xpmem \
                  --without-psm2 \
                  --without-loadleveler \
                  --without-lsf \
                  --without-alps \
                  --without-tm \
                  --without-sge \
                  --disable-memchecker \
                  --disable-java \
                  --disable-mpi-java \
                  --with-ucx \
   && make all install \
   && rm -rf /root/openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }} \
   && rm /openmpi-{{ OPENMPI_VERSION }}.{{ OPENMPI_PATCHLEVEL }}.tar.bz2

{% endif %}

RUN curl -sSLO http://mvapich.cse.ohio-state.edu/download/mvapich/osu-micro-benchmarks-{{ OSU_MICROBENCHMARK_VERSION }}.tar.gz \
   && tar -xzf osu-micro-benchmarks-{{ OSU_MICROBENCHMARK_VERSION }}.tar.gz -C /root \
   && cd /root/osu-micro-benchmarks-{{ OSU_MICROBENCHMARK_VERSION }} \
   && ./configure --prefix=/opt/osu-micro-benchmarks CC=`which mpicc` CXX=`which mpicxx` \
   && cd mpi \
   && make install \
   && rm -rf /root/osu-micro-benchmarks-{{ OSU_MICROBENCHMARK_VERSION }} \
   && rm /osu-micro-benchmarks-{{ OSU_MICROBENCHMARK_VERSION }}.tar.gz

RUN /opt/glotzerlab/bin/python3 -m pip install --no-cache-dir --no-binary mpi4py -r requirements-mpi.txt
